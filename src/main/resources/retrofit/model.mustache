package {{package}}


import java.math.* // ktlint-disable
import java.util.* // ktlint-disable
import java.io.* // ktlint-disable
import com.squareup.moshi.* // ktlint-disable

{{#models}}
{{#model}}
/**
 * {{description}}
 *
 * @link https://github.com/eaglesakura/lightweight-swagger-codegen
 **/
{{#isEnum}}
data class {{classname}}(private val value: String) {
    override fun toString(): String {
        return value
    }
    companion object {
{{#allowableValues}}{{#values}}
        val {{{.}}} = {{classname}}("{{.}}")
{{/values}}{{/allowableValues}}
        fun parse(value: String): {{classname}} {
            when(value) {
                "" -> throw IllegalArgumentException("Invalid enum($value)")
                {{#allowableValues}}{{#values}}
                "{{{.}}}" -> return {{{.}}}
                {{/values}}{{/allowableValues}}
                else -> return {{classname}}(value)
            }
        }
    }
}
{{/isEnum}}
{{^isEnum}}
data class {{classname}}(
{{#vars}}

    /**
     * {{{description}}}
     */
    @Json(name = "{{baseName}}")
    {{#isEnum}}
    val {{name}}: {{classname}}{{datatypeWithEnum}}{{^required}}? = null{{/required}}{{#hasMore}}, {{/hasMore}}
    {{/isEnum}}
    {{^isEnum}}
    val {{name}}: {{{datatype}}}{{^required}}? = null{{/required}}{{#hasMore}}, {{/hasMore}}
    {{/isEnum}}
{{/vars}}
)

{{#vars}}{{#isEnum}}
data class {{classname}}{{datatypeWithEnum}}(private val value: String) {
    override fun toString(): String {
        return value
    }
    companion object {
{{#allowableValues}}{{#values}}
        val {{{.}}} = {{classname}}{{datatypeWithEnum}}("{{.}}")
{{/values}}{{/allowableValues}}
        fun parse(value: String): {{classname}}{{datatypeWithEnum}} {
            when(value) {
                "" -> throw IllegalArgumentException("Invalid enum($value)")
                {{#allowableValues}}{{#values}}
                "{{{.}}}" -> return {{{.}}}
                {{/values}}{{/allowableValues}}
                else -> return {{classname}}{{datatypeWithEnum}}(value)
            }
        }
    }
}
{{/isEnum}}{{/vars}}
{{/isEnum}}
{{/model}}
{{/models}}
